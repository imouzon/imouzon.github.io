<!DOCTYPE html>
<html>
   <head>
      <link href ="../global/www/css/stat105.css" type="text/css" rel = "stylesheet">
      <style type="text/css">
      @import url(https://fonts.googleapis.com/css?family=Droid+Serif:400,700,400italic);
      @import url(https://fonts.googleapis.com/css?family=Yanone+Kaffeesatz);
      @import url(https://fonts.googleapis.com/css?family=Ubuntu+Mono:400,700,400italic);
      </style>

      <title>STAT 105: Lecture 9</title>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
      <meta name="keywords" content="statistics,engineering,stat105,iastate"/>
      <meta name="description" content="Lecture 9: Fitting Linear Models, etc."/>
   </head>

   <body>
   <textarea id="source">


name: inverse
layout: true
class: center, middle, inverse
---
# STAT 105: Lecture 8
## Chapter 4: Describing Relationships Between Variables
.footnote[Course page: [imouzon.github.io/stat105](https://imouzon.github.io/stat105)]
---
layout:false

.left-column[
## Describing Relationships
### Recap
### Residuals
]
.right-column[

###Residuals

-  The "residue" left over from fitting a line

<center>
   <img src="residual_plpt.gif" alt="dmc logo" height="250"> 
</center>

-  Each point represents some \\((x_i, y_i)\\) pair from our data

-  We use the Least Squares approach to find the best fit line, \\(\hat{y} = b_0 + b_1 x\\)

-  For any value \\(x_i\\) in our data set, we can get a predicted value \\(\hat{y}_i = b_0 + b_1 x_i \\)


]
---

.left-column[
## Describing Relationships
### Recap
### Residuals
]
.right-column[

###Residuals

<center>
   <img src="residual_plpt.gif" alt="dmc logo" height="250"> 
</center>


-  The residual is the difference between the observed data point and the fitted prediction:
\\[
e_i = y_i - \hat{y}_i
\\]

-  **in the linear case**, using \\(\hat{y} = b_0 + b_1 x\\), we can also write
\\[
e_i = y_i - \hat{y}_i = y_i - (b_0  + b_1 x_i)
\\]
for each pair \\((x_i, y_i)\\).


]
---

.left-column[
## Describing Relationships
### Recap
### Residuals
]
.right-column[

###Residuals

<center>
   <img src="residual_plpt.gif" alt="dmc logo" height="250"> 
</center>


**ROPe**: **R**esiduals = **O**bserved - **P**redicted (using symbol \\(e_i\\))

-  If \\(e_i > 0\\) then the observed is bigger than the predicted - we are "underpredicting"

-  If \\(e_i < 0\\) then the observed is smaller than the predicted - we are "overpredicting" 


]

<!--- 
--->

---

.left-column[
## Describing Relationships
### Recap
### Residuals
]
.right-column[

###Residuals

<center>
   <img src="residual_plpt.gif" alt="dmc logo" height="250"> 
</center>


**ROPe**: **R**esiduals = **O**bserved - **P**redicted (using symbol \\(e_i\\))

-  If \\(e_i > 0\\) then the observed is bigger than the predicted - we are "underpredicting"

-  If \\(e_i < 0\\) then the observed is smaller than the predicted - we are "overpredicting" 


]





</textarea>
<!-- load remark -->
<script src="https://gnab.github.io/remark/downloads/remark-latest.min.js" type="text/javascript"></script>

<!-- load mathjax -->
<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&delayStartupUntil=configured"></script>

<!-- Initialize (has to go in <script> tag **without** SRC attribute) -->
<script type="text/javascript">
   // Create slideshow
   var slideshow = remark.create({
      // This BREAKS MathJax: 
      // highlightLanguage: 'Python'

      // You have to tag every code block with python, like so:
      //
      // ```python
      // def add(a, b):
      //     return a + b
      // ```
   });

   // Setup MathJax
   MathJax.Hub.Config({
      tex2jax: {
         skipTags: ['script', 'noscript', 'style', 'textarea', 'pre']
      }
   });
   MathJax.Hub.Queue(function() {
      $(MathJax.Hub.getAllJax()).map(function(index, elem) {
         return(elem.SourceElement());
      }).parent().addClass('has-jax');
   });
   MathJax.Hub.Queue(function() {
      $(MathJax.Hub.getAllJax()).map(function(index, elem) {
         return(elem.SourceElement());
      }).parent().addClass('has-jax');
   });

   MathJax.Hub.Configured();
</script>
